# This is a basic workflow to help you get started with Actions

on:
  push:
    branches:
      - 'master'

jobs:

  build_docker_image:
    runs-on: ubuntu-latest
    steps:

#     Build JAR:
      - uses: actions/checkout@v1
      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Maven Package
        run: mvn -B clean compile package -DskipTests

#     Set global environment variables:
      - name: set global env
        id: global_env
        run: |
          echo "::set-output name=IMAGE_NAME::${GITHUB_REPOSITORY#*/}"
          echo "::set-output name=DOCKERHUB_IMAGE_NAME::fardreamer/${GITHUB_REPOSITORY#*/}"

#     Docker login
      - name: Docker login
        run: echo ${{secrets.DOCKER_SECRET}} | docker login -u fardreamer --password-stdin

#     Build Docker image:
      - name: Build and tag image
        run: |
          docker build . -t "${{ steps.global_env.outputs.DOCKERHUB_IMAGE_NAME }}:latest" -t "${{ steps.global_env.outputs.DOCKERHUB_IMAGE_NAME }}:${GITHUB_RUN_ID}"

#     Publish image to github package repository:
      - name: Publish image
        run: |
          docker push ${{ steps.global_env.outputs.DOCKERHUB_IMAGE_NAME }}:latest
          docker push ${{ steps.global_env.outputs.DOCKERHUB_IMAGE_NAME }}:${GITHUB_RUN_ID}

#     Create image pull secret for Docker Hub
      - name: Set imagePullSecret
        uses: azure/k8s-create-secret@v1
        with:
          container-registry-username: fardreamer
          container-registry-password: ${{secrets.DOCKER_SECRET}}
          secret-name                : 'docker-cr'
          force                      : true 
        id: create-secret
